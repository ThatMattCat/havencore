events {
    worker_connections 1024;
}

http {
    upstream vllm_service {
        server vllm:8000;
    }
    
    upstream tts_service {
        server text-to-speech:6005;
    }
    
    upstream stt_service {
        server speech-to-text:6001;
    }
    
    upstream agent_service {
        server agent:6002;
    }

    upstream agent_service_openai {
        server agent:6006;
    }

    upstream iav_ui {
        server iav-to-text:8110;
    }

    upstream iav_vllm {
        server iav-to-text:8100;
    }
    
    upstream tts_ui {
        server text-to-speech:6004;
    }
    
    server {
        listen 80;
        
        location /health {
            access_log off;
            return 200 "AI Gateway healthy\n";
            add_header Content-Type text/plain;
        }
        
        # Agent LLM endpoint (via Agent- NOT real OpenAI-compat
        # Accept OpenAI-compat request but only pulls latest message.
        # because the Agent handles conversation history...hacky)
        location /v1/chat/completions {
            proxy_pass http://agent_service_openai;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_read_timeout 300s;
            proxy_send_timeout 300s;
        }

        # vLLM direct connect, no Agent but full OpenAI-compat)
        location /v2/chat/completions {
            proxy_pass http://vllm_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_read_timeout 300s;
            proxy_send_timeout 300s;
        }
        
        location /v2/completions {
            proxy_pass http://vllm_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_read_timeout 300s;
            proxy_send_timeout 300s;
        }
        # TODO: Serve v1 and v2? 
        location /v1/models {
            proxy_pass http://vllm_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }
        
        # TTS endpoint
        location /v1/audio/speech {
            proxy_pass http://tts_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_read_timeout 300s;
            proxy_send_timeout 300s;
            client_max_body_size 10M;
        }
        
        # STT endpoints
        location /v1/audio/transcriptions {
            proxy_pass http://stt_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_read_timeout 300s;
            proxy_send_timeout 300s;
            client_max_body_size 25M;
        }
        
        location /v1/audio/translations {
            proxy_pass http://stt_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_read_timeout 300s;
            proxy_send_timeout 300s;
            client_max_body_size 25M;
        }
        
        location /agent/ {
            proxy_pass http://agent_service/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }

        location /iav/ui/ {
            client_max_body_size 100M;  # Adjust size as needed
            
            proxy_pass http://iav_ui/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # For Gradio WebSocket support (if needed)
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            
            # Timeout settings for large file uploads
            proxy_read_timeout 300s;
            proxy_send_timeout 300s;
        }

        # Example:
        # curl http://localhost/iav/api \
        #     -H "Content-Type: application/json" \
        #     -d '{
        #     "messages": [
        #     {"role": "system", "content": "You are a helpful assistant."},
        #     {"role": "user", "content": [
        #         {"type": "image_url", "image_url": {"url": "https://modelscope.oss-cn-beijing.aliyuncs.com/resource/qwen.png"}},
        #         {"type": "audio_url", "audio_url": {"url": "https://qianwen-res.oss-cn-beijing.aliyuncs.com/Qwen2.5-Omni/cough.wav"}},
        #         {"type": "text", "text": "What is the text in the illustrate ans what it the sound in the audio?"}
        #     ]}
        #     ]
        #     }'
        location /iav/api {
            proxy_pass http://iav_vllm/v1/chat/completions;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_read_timeout 300s;
            proxy_send_timeout 300s;
        }
        
        # TTS UI
        location /tts-ui/ {
            proxy_pass http://tts_ui/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        
        location / {
            return 200 '{"message": "AI Gateway", "services": {"llm": "/v1/chat/completions", "tts": "/v1/audio/speech", "stt": "/v1/audio/transcriptions", "agent": "/agent/", "tts_ui": "/tts-ui/"}}';
            add_header Content-Type application/json;
        }
    }
}